{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\n\nfunction HomeComponent_table_2_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"td\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tickerInfo_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickerInfo_r2.TickerType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickerInfo_r2.Ticker);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickerInfo_r2.ClassCode);\n  }\n}\n\nfunction HomeComponent_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 1)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"TickerType\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Ticker\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"ClassCode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Price\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, HomeComponent_table_2_tr_12_Template, 8, 3, \"tr\", 2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tickerInfos);\n  }\n}\n\nexport class HomeComponent {\n  constructor(http, baseUrl) {\n    this.tickerInfos = [{\n      Ticker: \"SNGSP\",\n      TickerType: InstrumentType.Share,\n      ClassCode: \"TQBR\"\n    }];\n    this.tickerPrices = new Map();\n    const params = new HttpParams().set(\"tickerInfos\", JSON.stringify(this.tickerInfos));\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    http.get(baseUrl + 'instrumentprices/getpricesasync', {\n      params: params,\n      headers: headers\n    }).subscribe(result => {\n      alert(result);\n    }, error => {\n      console.error(error.message);\n    });\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, HomeComponent_table_2_Template, 13, 1, \"table\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.tickerInfos);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});\nexport var InstrumentType;\n\n(function (InstrumentType) {\n  InstrumentType[InstrumentType[\"Share\"] = 0] = \"Share\";\n  InstrumentType[InstrumentType[\"Bond\"] = 1] = \"Bond\";\n  InstrumentType[InstrumentType[\"Etf\"] = 2] = \"Etf\";\n})(InstrumentType || (InstrumentType = {}));","map":{"version":3,"mappings":"AACA,SAAqBA,WAArB,EAAkCC,UAAlC,QAAoD,sBAApD;;;;;;;ICYIC,2BAA2C,CAA3C,EAA2C,IAA3C;IACMA;IAA2BA;IAC/BA;IAAIA;IAAuBA;IAC3BA;IAAIA;IAA0BA;IAC9BA;IACFA;;;;;IAJMA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;;;IAbVA,iCAAoF,CAApF,EAAoF,OAApF,EAAoF,CAApF,EAAoF,IAApF,EAAoF,CAApF,EAAoF,IAApF;IAGUA;IAAUA;IACdA;IAAIA;IAAMA;IACVA;IAAIA;IAASA;IACbA;IAAIA;IAAKA;IAGbA;IACEA;IAMFA;;;;;IAN6BA;IAAAA;;;;ADN/B,OAAM,MAAOC,aAAP,CAAoB;EAWxBC,YAAYC,IAAZ,EAAkDC,OAAlD,EAAiE;IAV1D,mBAAiC,CACrB;MACfC,MAAM,EAAE,OADO;MAEfC,UAAU,EAAEC,cAAc,CAACC,KAFZ;MAGfC,SAAS,EAAE;IAHI,CADqB,CAAjC;IAQA,oBAAoC,IAAIC,GAAJ,EAApC;IAGL,MAAMC,MAAM,GAAG,IAAIZ,UAAJ,GAAiBa,GAAjB,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAe,KAAKC,WAApB,CAApC,CAAf;IACA,MAAMC,OAAO,GAAG,IAAIlB,WAAJ,CAAgB;MAAE,gBAAgB;IAAlB,CAAhB,CAAhB;IAEAK,IAAI,CAACc,GAAL,CAA4Bb,OAAO,GAAG,iCAAtC,EAAyE;MAAEO,MAAM,EAAEA,MAAV;MAAkBK,OAAO,EAAEA;IAA3B,CAAzE,EACGE,SADH,CACaC,MAAM,IAAG;MAClBC,KAAK,CAACD,MAAD,CAAL;IACD,CAHH,EAGKE,KAAK,IAAG;MACTC,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;IACD,CALH;EAMD;;AArBuB;;;mBAAbtB,eAAaD,0DAWc,UAXd;AAWwB;;;QAXrCC;EAAauB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP1B5B;MAAIA;MAAIA;MAGRA;;;;MAAiEA;MAAAA;;;;;;ADkCjE,WAAYO,cAAZ;;AAAA,WAAYA,cAAZ,EAA0B;EACxBA;EACAA;EACAA;AACD,CAJD,EAAYA,cAAc,KAAdA,cAAc,MAA1B","names":["HttpHeaders","HttpParams","i0","HomeComponent","constructor","http","baseUrl","Ticker","TickerType","InstrumentType","Share","ClassCode","Map","params","set","JSON","stringify","tickerInfos","headers","get","subscribe","result","alert","error","console","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\ProjectsRepository\\repos\\InvestCore\\InvestHelper\\ClientApp\\src\\app\\home\\home.component.ts","D:\\ProjectsRepository\\repos\\InvestCore\\InvestHelper\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  public tickerInfos: ITickerInfoBase[] = [\r\n    <ITickerInfoBase>{\r\n      Ticker: \"SNGSP\",\r\n      TickerType: InstrumentType.Share,\r\n      ClassCode: \"TQBR\",\r\n    }\r\n  ];\r\n\r\n  public tickerPrices: Map<string, number> = new Map<string, number>();\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    const params = new HttpParams().set(\"tickerInfos\", JSON.stringify(this.tickerInfos));\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    http.get<ITickerInfoBase[]>(baseUrl + 'instrumentprices/getpricesasync', { params: params, headers: headers })\r\n      .subscribe(result => {\r\n        alert(result);\r\n      }, error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\nexport interface ITickerInfoBase {\r\n  TickerType: InstrumentType;\r\n  Ticker: string;\r\n  ClassCode: string;\r\n}\r\n\r\nexport enum InstrumentType {\r\n  Share,\r\n  Bond,\r\n  Etf,\r\n}\r\n","<h1>Test</h1>\r\n\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"tickerInfos\">\r\n  <thead>\r\n    <tr>\r\n      <th>TickerType</th>\r\n      <th>Ticker</th>\r\n      <th>ClassCode</th>\r\n      <th>Price</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let tickerInfo of tickerInfos\">\r\n      <td>{{ tickerInfo.TickerType }}</td>\r\n      <td>{{ tickerInfo.Ticker }}</td>\r\n      <td>{{ tickerInfo.ClassCode }}</td>\r\n      <td></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module"}